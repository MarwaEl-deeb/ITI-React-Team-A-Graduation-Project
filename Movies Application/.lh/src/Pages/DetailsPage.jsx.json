{
    "sourceFile": "src/Pages/DetailsPage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 36,
            "patches": [
                {
                    "date": 1757681087615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757766178961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,18 @@\n+import { useParams } from \"react-router-dom\";\r\n+import NavBar from \"../Components/NavBar\";\r\n+import CardDetails from \"../Components/CardDetails\";\r\n+import Recommendation from \"../Components/Recommendation\";\r\n+\r\n function DetailsPage() {\r\n\\ No newline at end of file\n-    return (\r\n-        <div></div>\r\n-    )\r\n+  const { id } = useParams();\r\n+\r\n+  return (\r\n+    <>\r\n+      <CardDetails id={id} />\r\n+      <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n+      <Recommendation id={id} />\r\n+    </>\r\n+  );\r\n }\r\n-export default DetailsPage\n+\r\n+export default DetailsPage;\r\n"
                },
                {
                    "date": 1757766214900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,12 +7,13 @@\n   const { id } = useParams();\r\n \r\n   return (\r\n     <>\r\n+      <NavBar />\r\n       <CardDetails id={id} />\r\n       <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n       <Recommendation id={id} />\r\n     </>\r\n   );\r\n }\r\n \r\n\\ No newline at end of file\n-export default DetailsPage;\n+export default DetailsPage;\r\n"
                },
                {
                    "date": 1757769128209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,13 +7,12 @@\n   const { id } = useParams();\r\n \r\n   return (\r\n     <>\r\n-      <NavBar />\r\n       <CardDetails id={id} />\r\n       <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n       <Recommendation id={id} />\r\n     </>\r\n   );\r\n }\r\n \r\n-export default DetailsPage;\n\\ No newline at end of file\n+export default DetailsPage;\r\n"
                },
                {
                    "date": 1757784529584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,31 @@\n import NavBar from \"../Components/NavBar\";\r\n import CardDetails from \"../Components/CardDetails\";\r\n import Recommendation from \"../Components/Recommendation\";\r\n \r\n+useEffect(() => {\r\n+  fetch(\r\n+    `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n+  )\r\n+    .then((res) => res.json())\r\n+    .then((data) => {\r\n+      setMovies(data.results || []);\r\n+      setLoading(false);\r\n+    })\r\n+    .catch((err) => {\r\n+      console.error(err);\r\n+      setLoading(false);\r\n+    });\r\n+}, [id]);\r\n function DetailsPage() {\r\n   const { id } = useParams();\r\n \r\n   return (\r\n     <>\r\n+      <NavBar />\r\n       <CardDetails id={id} />\r\n       <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n-      <Recommendation id={id} />\r\n+      <Card id={id} />\r\n     </>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1757784560710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,19 @@\n       console.error(err);\r\n       setLoading(false);\r\n     });\r\n }, [id]);\r\n+if (loading)\r\n+  return (\r\n+    <div className=\"text-center my-4\">\r\n+      <Spinner animation=\"border\" variant=\"warning\" />\r\n+    </div>\r\n+  );\r\n+\r\n+if (!movies.length)\r\n+  return <p className=\"text-center\">No recommendations found</p>;\r\n+\r\n+\r\n function DetailsPage() {\r\n   const { id } = useParams();\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1757784575655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,19 +16,10 @@\n       console.error(err);\r\n       setLoading(false);\r\n     });\r\n }, [id]);\r\n-if (loading)\r\n-  return (\r\n-    <div className=\"text-center my-4\">\r\n-      <Spinner animation=\"border\" variant=\"warning\" />\r\n-    </div>\r\n-  );\r\n \r\n-if (!movies.length)\r\n-  return <p className=\"text-center\">No recommendations found</p>;\r\n \r\n-\r\n function DetailsPage() {\r\n   const { id } = useParams();\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1757784591085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,8 @@\n       console.error(err);\r\n       setLoading(false);\r\n     });\r\n }, [id]);\r\n-\r\n-\r\n function DetailsPage() {\r\n   const { id } = useParams();\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1757784635907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,12 @@\n-import { useParams } from \"react-router-dom\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { useParams, } from \"react-router-dom\";\r\n import NavBar from \"../Components/NavBar\";\r\n import CardDetails from \"../Components/CardDetails\";\r\n import Recommendation from \"../Components/Recommendation\";\r\n \r\n-useEffect(() => {\r\n-  fetch(\r\n-    `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n-  )\r\n-    .then((res) => res.json())\r\n-    .then((data) => {\r\n-      setMovies(data.results || []);\r\n-      setLoading(false);\r\n-    })\r\n-    .catch((err) => {\r\n-      console.error(err);\r\n-      setLoading(false);\r\n-    });\r\n-}, [id]);\r\n+\r\n+\r\n function DetailsPage() {\r\n   const { id } = useParams();\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1757784643632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n import { useEffect, useState } from \"react\";\r\n+import { Spinner, Card, Container, Row, Col } from \"react-bootstrap\";\r\n+\r\n import { useParams, } from \"react-router-dom\";\r\n import NavBar from \"../Components/NavBar\";\r\n import CardDetails from \"../Components/CardDetails\";\r\n import Recommendation from \"../Components/Recommendation\";\r\n"
                },
                {
                    "date": 1757784695710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { useEffect, useState } from \"react\";\r\n import { Spinner, Card, Container, Row, Col } from \"react-bootstrap\";\r\n-\r\n+import { useNavigate } from \"react-router-dom\";\r\n import { useParams, } from \"react-router-dom\";\r\n import NavBar from \"../Components/NavBar\";\r\n import CardDetails from \"../Components/CardDetails\";\r\n import Recommendation from \"../Components/Recommendation\";\r\n@@ -9,8 +9,10 @@\n \r\n \r\n function DetailsPage() {\r\n   const { id } = useParams();\r\n+  const [loading, setLoading] = useState(true);\r\n+  const navigate = useNavigate();\r\n \r\n   return (\r\n     <>\r\n       <NavBar />\r\n"
                },
                {
                    "date": 1757784771913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,23 @@\n \r\n \r\n \r\n function DetailsPage() {\r\n+\r\n+  useEffect(() => {\r\n+    fetch(\r\n+      `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n+    )\r\n+      .then((res) => res.json())\r\n+      .then((data) => {\r\n+        setMovies(data.results || []);\r\n+        setLoading(false);\r\n+      })\r\n+      .catch((err) => {\r\n+        console.error(err);\r\n+        setLoading(false);\r\n+      });\r\n+  }, [id]);\r\n   const { id } = useParams();\r\n   const [loading, setLoading] = useState(true);\r\n   const navigate = useNavigate();\r\n \r\n"
                },
                {
                    "date": 1757784827171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,12 @@\n \r\n \r\n function DetailsPage() {\r\n \r\n+  const { id } = useParams();\r\n+  const [loading, setLoading] = useState(true);\r\n+  const navigate = useNavigate();\r\n+\r\n   useEffect(() => {\r\n     fetch(\r\n       `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n     )\r\n@@ -23,12 +27,20 @@\n         console.error(err);\r\n         setLoading(false);\r\n       });\r\n   }, [id]);\r\n-  const { id } = useParams();\r\n-  const [loading, setLoading] = useState(true);\r\n-  const navigate = useNavigate();\r\n \r\n+  if (loading)\r\n+    return (\r\n+      <div className=\"text-center my-4\">\r\n+        <Spinner animation=\"border\" variant=\"warning\" />\r\n+      </div>\r\n+    );\r\n+\r\n+  if (!movies.length)\r\n+    return <p className=\"text-center\">No recommendations found</p>;\r\n+\r\n+\r\n   return (\r\n     <>\r\n       <NavBar />\r\n       <CardDetails id={id} />\r\n"
                },
                {
                    "date": 1757784845115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n function DetailsPage() {\r\n \r\n   const { id } = useParams();\r\n   const [loading, setLoading] = useState(true);\r\n+  const [movies, setMovies] = useState([]);\r\n+\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n     fetch(\r\n"
                },
                {
                    "date": 1757784947869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,18 +3,16 @@\n import { useNavigate } from \"react-router-dom\";\r\n import { useParams, } from \"react-router-dom\";\r\n import NavBar from \"../Components/NavBar\";\r\n import CardDetails from \"../Components/CardDetails\";\r\n-import Recommendation from \"../Components/Recommendation\";\r\n \r\n \r\n \r\n function DetailsPage() {\r\n \r\n   const { id } = useParams();\r\n   const [loading, setLoading] = useState(true);\r\n   const [movies, setMovies] = useState([]);\r\n-\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n     fetch(\r\n"
                },
                {
                    "date": 1757784963348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     <>\r\n       <NavBar />\r\n       <CardDetails id={id} />\r\n       <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n-      <Card id={id} />\r\n+      <CardList id={id} />\r\n     </>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1757784980694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { useNavigate } from \"react-router-dom\";\r\n import { useParams, } from \"react-router-dom\";\r\n import NavBar from \"../Components/NavBar\";\r\n import CardDetails from \"../Components/CardDetails\";\r\n+import CardList from \"../Components/Card\";\r\n \r\n \r\n \r\n function DetailsPage() {\r\n"
                },
                {
                    "date": 1757785007852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     <>\r\n       <NavBar />\r\n       <CardDetails id={id} />\r\n       <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n-      <CardList id={id} />\r\n+      <CardList data={id} />\r\n     </>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1757785042290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,10 @@\n     <>\r\n       <NavBar />\r\n       <CardDetails id={id} />\r\n       <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n-      <CardList data={id} />\r\n+      <CardList data={  const [movies, setMovies] = useState([]);\r\n+} />\r\n     </>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1757786099670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,9 @@\n     <>\r\n       <NavBar />\r\n       <CardDetails id={id} />\r\n       <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n-      <CardList data={  const [movies, setMovies] = useState([]);\r\n-} />\r\n+      <CardList data={movies} />\r\n     </>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1757786185902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     <>\r\n       <NavBar />\r\n       <CardDetails id={id} />\r\n       <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n-      <CardList data={movies} />\r\n+      <CardList data={movies} isRecommendation={true} />\r\n     </>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1757786254592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,25 @@\n+import { useParams } from \"react-router-dom\";\r\n+import NavBar from \"../Components/NavBar\";\r\n+import CardDetails from \"../Components/CardDetails\";\r\n+import Recommendation from \"../Components/Recommendation\";\r\n+\r\n+function DetailsPage() {\r\n+  const { id } = useParams();\r\n+\r\n+  return (\r\n+    <>\r\n+      <NavBar />\r\n+      <CardDetails id={id} />\r\n+      <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n+      <Recommendation id={id} />\r\n+    </>\r\n+  );\r\n+}\r\n+\r\n+export default DetailsPage;\r\n+\r\n+/*\r\n import { useEffect, useState } from \"react\";\r\n import { Spinner, Card, Container, Row, Col } from \"react-bootstrap\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import { useParams, } from \"react-router-dom\";\r\n@@ -51,4 +72,6 @@\n   );\r\n }\r\n \r\n export default DetailsPage;\r\n+\r\n+*/\r\n"
                },
                {
                    "date": 1757786583934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,5 @@\n-import { useParams } from \"react-router-dom\";\r\n-import NavBar from \"../Components/NavBar\";\r\n-import CardDetails from \"../Components/CardDetails\";\r\n-import Recommendation from \"../Components/Recommendation\";\r\n \r\n-function DetailsPage() {\r\n-  const { id } = useParams();\r\n-\r\n-  return (\r\n-    <>\r\n-      <NavBar />\r\n-      <CardDetails id={id} />\r\n-      <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n-      <Recommendation id={id} />\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-export default DetailsPage;\r\n-\r\n-/*\r\n import { useEffect, useState } from \"react\";\r\n import { Spinner, Card, Container, Row, Col } from \"react-bootstrap\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import { useParams, } from \"react-router-dom\";\r\n@@ -72,6 +52,4 @@\n   );\r\n }\r\n \r\n export default DetailsPage;\r\n-\r\n-*/\r\n"
                },
                {
                    "date": 1757786630241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,25 @@\n+import { useParams } from \"react-router-dom\";\r\n+import NavBar from \"../Components/NavBar\";\r\n+import CardDetails from \"../Components/CardDetails\";\r\n+import Recommendation from \"../Components/Recommendation\";\r\n \r\n+function DetailsPage() {\r\n+  const { id } = useParams();\r\n+\r\n+  return (\r\n+    <>\r\n+      <NavBar />\r\n+      <CardDetails id={id} />\r\n+      <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n+      <Recommendation id={id} />\r\n+    </>\r\n+  );\r\n+}\r\n+\r\n+export default DetailsPage;\r\n+\r\n+/*\r\n import { useEffect, useState } from \"react\";\r\n import { Spinner, Card, Container, Row, Col } from \"react-bootstrap\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import { useParams, } from \"react-router-dom\";\r\n@@ -52,4 +72,6 @@\n   );\r\n }\r\n \r\n export default DetailsPage;\r\n+\r\n+*/\r\n"
                },
                {
                    "date": 1757794897514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+import { useEffect, useState, useContext } from \"react\";\r\n+import { Spinner } from \"react-bootstrap\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import NavBar from \"../Components/NavBar\";\r\n+import CardDetails from \"../Components/CardDetails\";\r\n+import CardList from \"../Components/Card\";\r\n+import { MainContext } from \"../useContext\";\r\n+\r\n+function DetailsPage() {\r\n+  const { id } = useParams();\r\n+  const { selectedType } = useContext(MainContext);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [movies, setMovies] = useState([]);\r\n+\r\n+  const endpoint =\r\n+    selectedType === \"movies\"\r\n+      ? `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n+      : `https://api.themoviedb.org/3/tv/${id}/similar?api_key=dd1481c9866799f1bc15adf106a083fe`;\r\n+\r\n+  useEffect(() => {\r\n+    setLoading(true);\r\n+    fetch(endpoint)\r\n+      .then((res) => res.json())\r\n+      .then((data) => {\r\n+        setMovies(data.results || []);\r\n+        setLoading(false);\r\n+      })\r\n+      .catch((err) => {\r\n+        console.error(err);\r\n+        setMovies([]);\r\n+        setLoading(false);\r\n+      });\r\n+  }, [id, selectedType]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <NavBar />\r\n+      <CardDetails id={id} selectedType={selectedType} />\r\n+      <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n+\r\n+      {loading ? (\r\n+        <div className=\"text-center my-4\">\r\n+          <Spinner animation=\"border\" variant=\"warning\" />\r\n+        </div>\r\n+      ) : movies.length ? (\r\n+        <CardList data={movies} isRecommendation={true} />\r\n+      ) : (\r\n+        <p className=\"text-center\">No recommendations found</p>\r\n+      )}\r\n+    </>\r\n+  );\r\n+}\r\n+\r\n+export default DetailsPage;\r\n"
                },
                {
                    "date": 1757798384791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,28 +7,29 @@\n import { MainContext } from \"../useContext\";\r\n \r\n function DetailsPage() {\r\n   const { id } = useParams();\r\n-  const { selectedType } = useContext(MainContext);\r\n+  const { selectedType } = useContext(MainContext); // movies or tv\r\n   const [loading, setLoading] = useState(true);\r\n-  const [movies, setMovies] = useState([]);\r\n+  const [recommendations, setRecommendations] = useState([]);\r\n \r\n-  const endpoint =\r\n-    selectedType === \"movies\"\r\n-      ? `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n-      : `https://api.themoviedb.org/3/tv/${id}/similar?api_key=dd1481c9866799f1bc15adf106a083fe`;\r\n-\r\n   useEffect(() => {\r\n     setLoading(true);\r\n+\r\n+    const endpoint =\r\n+      selectedType === \"movies\"\r\n+        ? `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n+        : `https://api.themoviedb.org/3/tv/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`;\r\n+\r\n     fetch(endpoint)\r\n       .then((res) => res.json())\r\n       .then((data) => {\r\n-        setMovies(data.results || []);\r\n+        setRecommendations(data.results || []);\r\n         setLoading(false);\r\n       })\r\n       .catch((err) => {\r\n         console.error(err);\r\n-        setMovies([]);\r\n+        setRecommendations([]);\r\n         setLoading(false);\r\n       });\r\n   }, [id, selectedType]);\r\n \r\n@@ -41,91 +42,14 @@\n       {loading ? (\r\n         <div className=\"text-center my-4\">\r\n           <Spinner animation=\"border\" variant=\"warning\" />\r\n         </div>\r\n-      ) : movies.length ? (\r\n-        <CardList data={movies} isRecommendation={true} />\r\n+      ) : recommendations.length ? (\r\n+        <CardList data={recommendations} isRecommendation={true} />\r\n       ) : (\r\n         <p className=\"text-center\">No recommendations found</p>\r\n       )}\r\n     </>\r\n   );\r\n }\r\n \r\n export default DetailsPage;\r\n-import { useParams } from \"react-router-dom\";\r\n-import NavBar from \"../Components/NavBar\";\r\n-import CardDetails from \"../Components/CardDetails\";\r\n-import Recommendation from \"../Components/Recommendation\";\r\n-\r\n-function DetailsPage() {\r\n-  const { id } = useParams();\r\n-\r\n-  return (\r\n-    <>\r\n-      <NavBar />\r\n-      <CardDetails id={id} />\r\n-      <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n-      <Recommendation id={id} />\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-export default DetailsPage;\r\n-\r\n-/*\r\n-import { useEffect, useState } from \"react\";\r\n-import { Spinner, Card, Container, Row, Col } from \"react-bootstrap\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import { useParams, } from \"react-router-dom\";\r\n-import NavBar from \"../Components/NavBar\";\r\n-import CardDetails from \"../Components/CardDetails\";\r\n-import CardList from \"../Components/Card\";\r\n-\r\n-\r\n-\r\n-function DetailsPage() {\r\n-\r\n-  const { id } = useParams();\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [movies, setMovies] = useState([]);\r\n-  const navigate = useNavigate();\r\n-\r\n-  useEffect(() => {\r\n-    fetch(\r\n-      `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n-    )\r\n-      .then((res) => res.json())\r\n-      .then((data) => {\r\n-        setMovies(data.results || []);\r\n-        setLoading(false);\r\n-      })\r\n-      .catch((err) => {\r\n-        console.error(err);\r\n-        setLoading(false);\r\n-      });\r\n-  }, [id]);\r\n-\r\n-  if (loading)\r\n-    return (\r\n-      <div className=\"text-center my-4\">\r\n-        <Spinner animation=\"border\" variant=\"warning\" />\r\n-      </div>\r\n-    );\r\n-\r\n-  if (!movies.length)\r\n-    return <p className=\"text-center\">No recommendations found</p>;\r\n-\r\n-\r\n-  return (\r\n-    <>\r\n-      <NavBar />\r\n-      <CardDetails id={id} />\r\n-      <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n-      <CardList data={movies} isRecommendation={true} />\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-export default DetailsPage;\r\n-\r\n-*/\r\n"
                },
                {
                    "date": 1757798405725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,10 @@\n     setLoading(true);\r\n \r\n     const endpoint =\r\n       selectedType === \"movies\"\r\n-        ? `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n-        : `https://api.themoviedb.org/3/tv/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`;\r\n+        ? `https://api.themoviedb.org/3/tv/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n+        : `https://api.themoviedb.org/3/movies/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`;\r\n \r\n     fetch(endpoint)\r\n       .then((res) => res.json())\r\n       .then((data) => {\r\n"
                },
                {
                    "date": 1757798433733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,29 +7,25 @@\n import { MainContext } from \"../useContext\";\r\n \r\n function DetailsPage() {\r\n   const { id } = useParams();\r\n-  const { selectedType } = useContext(MainContext); // movies or tv\r\n+  const { selectedType } = useContext(MainContext);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [recommendations, setRecommendations] = useState([]);\r\n+  const [movies, setMovies] = useState([]);\r\n \r\n   useEffect(() => {\r\n     setLoading(true);\r\n-\r\n-    const endpoint =\r\n-      selectedType === \"movies\"\r\n-        ? `https://api.themoviedb.org/3/tv/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n-        : `https://api.themoviedb.org/3/movies/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`;\r\n-\r\n-    fetch(endpoint)\r\n+    fetch(\r\n+      `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n+    )\r\n       .then((res) => res.json())\r\n       .then((data) => {\r\n-        setRecommendations(data.results || []);\r\n+        setMovies(data.results || []);\r\n         setLoading(false);\r\n       })\r\n       .catch((err) => {\r\n         console.error(err);\r\n-        setRecommendations([]);\r\n+        setMovies([]);\r\n         setLoading(false);\r\n       });\r\n   }, [id, selectedType]);\r\n \r\n@@ -42,10 +38,10 @@\n       {loading ? (\r\n         <div className=\"text-center my-4\">\r\n           <Spinner animation=\"border\" variant=\"warning\" />\r\n         </div>\r\n-      ) : recommendations.length ? (\r\n-        <CardList data={recommendations} isRecommendation={true} />\r\n+      ) : movies.length ? (\r\n+        <CardList data={movies} isRecommendation={true} />\r\n       ) : (\r\n         <p className=\"text-center\">No recommendations found</p>\r\n       )}\r\n     </>\r\n"
                },
                {
                    "date": 1757799017167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,51 +1,184 @@\n-import { useEffect, useState, useContext } from \"react\";\r\n-import { Spinner } from \"react-bootstrap\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import NavBar from \"../Components/NavBar\";\r\n-import CardDetails from \"../Components/CardDetails\";\r\n-import CardList from \"../Components/Card\";\r\n-import { MainContext } from \"../useContext\";\r\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Card,\r\n+  Badge,\r\n+  Button,\r\n+  Spinner,\r\n+  Row,\r\n+  Col,\r\n+  Container,\r\n+  ListGroup,\r\n+} from \"react-bootstrap\";\r\n+import { FaGlobe, FaHeart } from \"react-icons/fa\";\r\n+import RatingStars from \"./RatingStars\";\r\n+import \"../index.css\";\r\n \r\n-function DetailsPage() {\r\n-  const { id } = useParams();\r\n-  const { selectedType } = useContext(MainContext);\r\n+export default function CardDetails({ id, selectedType }) {\r\n+  const [movie, setMovie] = useState(null);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [movies, setMovies] = useState([]);\r\n \r\n+  // Determine correct endpoint based on type\r\n+  const endpoint =\r\n+    selectedType === \"movies\"\r\n+      ? `https://api.themoviedb.org/3/movie/${id}?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n+      : `https://api.themoviedb.org/3/tv/${id}?api_key=dd1481c9866799f1bc15adf106a083fe`;\r\n+\r\n   useEffect(() => {\r\n     setLoading(true);\r\n-    fetch(\r\n-      `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n-    )\r\n+\r\n+    // Debug log to ensure correct API is called\r\n+    console.log(\"Fetching from endpoint:\", endpoint);\r\n+\r\n+    fetch(endpoint)\r\n       .then((res) => res.json())\r\n       .then((data) => {\r\n-        setMovies(data.results || []);\r\n+        console.log(\"API response:\", data); // Check API response\r\n+        setMovie(data);\r\n         setLoading(false);\r\n       })\r\n       .catch((err) => {\r\n-        console.error(err);\r\n-        setMovies([]);\r\n+        console.error(\"Fetch error:\", err);\r\n+        setMovie(null);\r\n         setLoading(false);\r\n       });\r\n-  }, [id, selectedType]);\r\n+  }, [id, selectedType, endpoint]);\r\n \r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"loading text-center my-5\">\r\n+        <Spinner animation=\"border\" variant=\"warning\" />\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!movie) return <p className=\"text-center\">No movie/TV show found</p>;\r\n+\r\n+  const formattedDate =\r\n+    movie.release_date || movie.first_air_date\r\n+      ? new Date(movie.release_date || movie.first_air_date).toLocaleDateString(\r\n+        \"en-US\",\r\n+        { year: \"numeric\", month: \"short\", day: \"numeric\" }\r\n+      )\r\n+      : \"N/A\";\r\n+\r\n+  const duration = movie.runtime || movie.episode_run_time?.[0] || \"N/A\";\r\n+\r\n+  const shortOverview = movie.overview\r\n+    ? movie.overview.length > 250\r\n+      ? movie.overview.substring(0, 250) + \"...\"\r\n+      : movie.overview\r\n+    : \"No description available\";\r\n+\r\n+  const genreColors = [\"primary\", \"success\", \"danger\", \"info\", \"warning\"];\r\n+\r\n+  const posterSrc = movie.poster_path\r\n+    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n+    : \"/fallback.jpg\";\r\n+\r\n   return (\r\n-    <>\r\n-      <NavBar />\r\n-      <CardDetails id={id} selectedType={selectedType} />\r\n-      <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n+    <Container fluid className=\"p-3\">\r\n+      <Card className=\"movie-card\">\r\n+        <Row className=\"g-3 flex-column flex-md-row\">\r\n+          {/* Poster */}\r\n+          <Col md={5} className=\"d-flex justify-content-center align-items-stretch\">\r\n+            <img\r\n+              src={posterSrc}\r\n+              alt={movie.original_title || movie.name}\r\n+              className=\"CardDetails\"\r\n+              style={{\r\n+                height: \"98%\",\r\n+                paddingLeft: \"5px\",\r\n+                paddingRight: \"5px\",\r\n+                margin: \"5px\",\r\n+                width: \"auto\",\r\n+                maxHeight: \"500px\",\r\n+                objectFit: \"contain\",\r\n+                borderRadius: \"15px\",\r\n+              }}\r\n+            />\r\n+          </Col>\r\n \r\n-      {loading ? (\r\n-        <div className=\"text-center my-4\">\r\n-          <Spinner animation=\"border\" variant=\"warning\" />\r\n-        </div>\r\n-      ) : movies.length ? (\r\n-        <CardList data={movies} isRecommendation={true} />\r\n-      ) : (\r\n-        <p className=\"text-center\">No recommendations found</p>\r\n-      )}\r\n-    </>\r\n+          {/* Details */}\r\n+          <Col md={7}>\r\n+            <Card.Body>\r\n+              <Card.Title className=\"fw-bold fs-3 d-flex justify-content-between align-items-center\">\r\n+                {movie.original_title || movie.name}\r\n+                <FaHeart style={{ color: \"gold\", cursor: \"pointer\" }} />\r\n+              </Card.Title>\r\n+              <Card.Subtitle className=\"mb-2 text-muted\">{formattedDate}</Card.Subtitle>\r\n+\r\n+              <RatingStars rating={movie.vote_average || 0} votes={movie.vote_count || 0} />\r\n+\r\n+              <Card.Text className=\"mt-3\">{shortOverview}</Card.Text>\r\n+\r\n+              {/* Genres */}\r\n+              <div className=\"mb-3\">\r\n+                {movie.genres?.map((g, index) => (\r\n+                  <Badge\r\n+                    bg={genreColors[index % genreColors.length]}\r\n+                    key={g.id}\r\n+                    className=\"me-1 genre-badge\"\r\n+                  >\r\n+                    {g.name}\r\n+                  </Badge>\r\n+                ))}\r\n+              </div>\r\n+\r\n+              {/* Extra Details */}\r\n+              <ListGroup variant=\"flush\" className=\"mb-3\">\r\n+                <ListGroup.Item>\r\n+                  <strong>Duration:</strong> {duration} Min.\r\n+                </ListGroup.Item>\r\n+                <ListGroup.Item>\r\n+                  <strong>Languages:</strong>{\" \"}\r\n+                  {movie.spoken_languages?.map((lang) => lang.english_name).join(\", \") || \"N/A\"}\r\n+                </ListGroup.Item>\r\n+              </ListGroup>\r\n+\r\n+              {movie.production_companies?.length > 0 && (\r\n+                <div className=\"d-flex flex-wrap align-items-center mb-3\">\r\n+                  {movie.production_companies.map((company) => (\r\n+                    <div\r\n+                      key={company.id}\r\n+                      className=\"me-3 mb-2 d-flex flex-column align-items-center\"\r\n+                    >\r\n+                      {company.logo_path ? (\r\n+                        <img\r\n+                          src={`https://image.tmdb.org/t/p/w200${company.logo_path}`}\r\n+                          alt={company.name}\r\n+                          title={company.name}\r\n+                          style={{\r\n+                            maxHeight: \"50px\",\r\n+                            objectFit: \"contain\",\r\n+                            background: \"#fff\",\r\n+                            borderRadius: \"6px\",\r\n+                            padding: \"4px\",\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        <span className=\"text-muted small\">{company.name}</span>\r\n+                      )}\r\n+                    </div>\r\n+                  ))}\r\n+                </div>\r\n+              )}\r\n+\r\n+              {movie.homepage && (\r\n+                <Button\r\n+                  variant=\"warning\"\r\n+                  href={movie.homepage}\r\n+                  target=\"_blank\"\r\n+                  rel=\"noopener noreferrer\"\r\n+                  className=\"fw-bold\"\r\n+                >\r\n+                  <FaGlobe className=\"me-2\" />\r\n+                  Website\r\n+                </Button>\r\n+              )}\r\n+            </Card.Body>\r\n+          </Col>\r\n+        </Row>\r\n+      </Card>\r\n+    </Container>\r\n   );\r\n }\r\n-\r\n-export default DetailsPage;\r\n"
                },
                {
                    "date": 1757799046518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,184 +1,51 @@\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Card,\r\n-  Badge,\r\n-  Button,\r\n-  Spinner,\r\n-  Row,\r\n-  Col,\r\n-  Container,\r\n-  ListGroup,\r\n-} from \"react-bootstrap\";\r\n-import { FaGlobe, FaHeart } from \"react-icons/fa\";\r\n-import RatingStars from \"./RatingStars\";\r\n-import \"../index.css\";\r\n+import { useEffect, useState, useContext } from \"react\";\r\n+import { Spinner } from \"react-bootstrap\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import NavBar from \"../Components/NavBar\";\r\n+import CardDetails from \"../Components/CardDetails\";\r\n+import CardList from \"../Components/Card\";\r\n+import { MainContext } from \"../useContext\";\r\n \r\n-export default function CardDetails({ id, selectedType }) {\r\n-  const [movie, setMovie] = useState(null);\r\n+function DetailsPage() {\r\n+  const { id } = useParams();\r\n+  const { selectedType } = useContext(MainContext);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [movies, setMovies] = useState([]);\r\n \r\n-  // Determine correct endpoint based on type\r\n-  const endpoint =\r\n-    selectedType === \"movies\"\r\n-      ? `https://api.themoviedb.org/3/movie/${id}?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n-      : `https://api.themoviedb.org/3/tv/${id}?api_key=dd1481c9866799f1bc15adf106a083fe`;\r\n-\r\n   useEffect(() => {\r\n     setLoading(true);\r\n-\r\n-    // Debug log to ensure correct API is called\r\n-    console.log(\"Fetching from endpoint:\", endpoint);\r\n-\r\n-    fetch(endpoint)\r\n+    fetch(\r\n+      `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=dd1481c9866799f1bc15adf106a083fe`\r\n+    )\r\n       .then((res) => res.json())\r\n       .then((data) => {\r\n-        console.log(\"API response:\", data); // Check API response\r\n-        setMovie(data);\r\n+        setMovies(data.results || []);\r\n         setLoading(false);\r\n       })\r\n       .catch((err) => {\r\n-        console.error(\"Fetch error:\", err);\r\n-        setMovie(null);\r\n+        console.error(err);\r\n+        setMovies([]);\r\n         setLoading(false);\r\n       });\r\n-  }, [id, selectedType, endpoint]);\r\n+  }, [id, selectedType]);\r\n \r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"loading text-center my-5\">\r\n-        <Spinner animation=\"border\" variant=\"warning\" />\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (!movie) return <p className=\"text-center\">No movie/TV show found</p>;\r\n-\r\n-  const formattedDate =\r\n-    movie.release_date || movie.first_air_date\r\n-      ? new Date(movie.release_date || movie.first_air_date).toLocaleDateString(\r\n-        \"en-US\",\r\n-        { year: \"numeric\", month: \"short\", day: \"numeric\" }\r\n-      )\r\n-      : \"N/A\";\r\n-\r\n-  const duration = movie.runtime || movie.episode_run_time?.[0] || \"N/A\";\r\n-\r\n-  const shortOverview = movie.overview\r\n-    ? movie.overview.length > 250\r\n-      ? movie.overview.substring(0, 250) + \"...\"\r\n-      : movie.overview\r\n-    : \"No description available\";\r\n-\r\n-  const genreColors = [\"primary\", \"success\", \"danger\", \"info\", \"warning\"];\r\n-\r\n-  const posterSrc = movie.poster_path\r\n-    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n-    : \"/fallback.jpg\";\r\n-\r\n   return (\r\n-    <Container fluid className=\"p-3\">\r\n-      <Card className=\"movie-card\">\r\n-        <Row className=\"g-3 flex-column flex-md-row\">\r\n-          {/* Poster */}\r\n-          <Col md={5} className=\"d-flex justify-content-center align-items-stretch\">\r\n-            <img\r\n-              src={posterSrc}\r\n-              alt={movie.original_title || movie.name}\r\n-              className=\"CardDetails\"\r\n-              style={{\r\n-                height: \"98%\",\r\n-                paddingLeft: \"5px\",\r\n-                paddingRight: \"5px\",\r\n-                margin: \"5px\",\r\n-                width: \"auto\",\r\n-                maxHeight: \"500px\",\r\n-                objectFit: \"contain\",\r\n-                borderRadius: \"15px\",\r\n-              }}\r\n-            />\r\n-          </Col>\r\n+    <>\r\n+      <NavBar />\r\n+      <CardDetails id={id} selectedType={selectedType} />\r\n+      <hr style={{ width: \"90%\", margin: \"2rem auto\" }} />\r\n \r\n-          {/* Details */}\r\n-          <Col md={7}>\r\n-            <Card.Body>\r\n-              <Card.Title className=\"fw-bold fs-3 d-flex justify-content-between align-items-center\">\r\n-                {movie.original_title || movie.name}\r\n-                <FaHeart style={{ color: \"gold\", cursor: \"pointer\" }} />\r\n-              </Card.Title>\r\n-              <Card.Subtitle className=\"mb-2 text-muted\">{formattedDate}</Card.Subtitle>\r\n-\r\n-              <RatingStars rating={movie.vote_average || 0} votes={movie.vote_count || 0} />\r\n-\r\n-              <Card.Text className=\"mt-3\">{shortOverview}</Card.Text>\r\n-\r\n-              {/* Genres */}\r\n-              <div className=\"mb-3\">\r\n-                {movie.genres?.map((g, index) => (\r\n-                  <Badge\r\n-                    bg={genreColors[index % genreColors.length]}\r\n-                    key={g.id}\r\n-                    className=\"me-1 genre-badge\"\r\n-                  >\r\n-                    {g.name}\r\n-                  </Badge>\r\n-                ))}\r\n-              </div>\r\n-\r\n-              {/* Extra Details */}\r\n-              <ListGroup variant=\"flush\" className=\"mb-3\">\r\n-                <ListGroup.Item>\r\n-                  <strong>Duration:</strong> {duration} Min.\r\n-                </ListGroup.Item>\r\n-                <ListGroup.Item>\r\n-                  <strong>Languages:</strong>{\" \"}\r\n-                  {movie.spoken_languages?.map((lang) => lang.english_name).join(\", \") || \"N/A\"}\r\n-                </ListGroup.Item>\r\n-              </ListGroup>\r\n-\r\n-              {movie.production_companies?.length > 0 && (\r\n-                <div className=\"d-flex flex-wrap align-items-center mb-3\">\r\n-                  {movie.production_companies.map((company) => (\r\n-                    <div\r\n-                      key={company.id}\r\n-                      className=\"me-3 mb-2 d-flex flex-column align-items-center\"\r\n-                    >\r\n-                      {company.logo_path ? (\r\n-                        <img\r\n-                          src={`https://image.tmdb.org/t/p/w200${company.logo_path}`}\r\n-                          alt={company.name}\r\n-                          title={company.name}\r\n-                          style={{\r\n-                            maxHeight: \"50px\",\r\n-                            objectFit: \"contain\",\r\n-                            background: \"#fff\",\r\n-                            borderRadius: \"6px\",\r\n-                            padding: \"4px\",\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        <span className=\"text-muted small\">{company.name}</span>\r\n-                      )}\r\n-                    </div>\r\n-                  ))}\r\n-                </div>\r\n-              )}\r\n-\r\n-              {movie.homepage && (\r\n-                <Button\r\n-                  variant=\"warning\"\r\n-                  href={movie.homepage}\r\n-                  target=\"_blank\"\r\n-                  rel=\"noopener noreferrer\"\r\n-                  className=\"fw-bold\"\r\n-                >\r\n-                  <FaGlobe className=\"me-2\" />\r\n-                  Website\r\n-                </Button>\r\n-              )}\r\n-            </Card.Body>\r\n-          </Col>\r\n-        </Row>\r\n-      </Card>\r\n-    </Container>\r\n+      {loading ? (\r\n+        <div className=\"text-center my-4\">\r\n+          <Spinner animation=\"border\" variant=\"warning\" />\r\n+        </div>\r\n+      ) : movies.length ? (\r\n+        <CardList data={movies} isRecommendation={true} />\r\n+      ) : (\r\n+        <p className=\"text-center\">No recommendations found</p>\r\n+      )}\r\n+    </>\r\n   );\r\n }\r\n+\r\n+export default DetailsPage;\r\n"
                },
                {
                    "date": 1757805668423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n         <div className=\"text-center my-4\">\r\n           <Spinner animation=\"border\" variant=\"warning\" />\r\n         </div>\r\n       ) : movies.length ? (\r\n+          <h2>Recommendations</h2>\r\n         <CardList data={movies} isRecommendation={true} />\r\n       ) : (\r\n         <p className=\"text-center\">No recommendations found</p>\r\n       )}\r\n"
                },
                {
                    "date": 1757805696948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,12 @@\n         <div className=\"text-center my-4\">\r\n           <Spinner animation=\"border\" variant=\"warning\" />\r\n         </div>\r\n       ) : movies.length ? (\r\n+        <div>\r\n           <h2>Recommendations</h2>\r\n-        <CardList data={movies} isRecommendation={true} />\r\n+          <CardList data={movies} isRecommendation={true} />\r\n+        </div>\r\n       ) : (\r\n         <p className=\"text-center\">No recommendations found</p>\r\n       )}\r\n     </>\r\n"
                },
                {
                    "date": 1757805704906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n           <Spinner animation=\"border\" variant=\"warning\" />\r\n         </div>\r\n       ) : movies.length ? (\r\n         <div>\r\n-          <h2>Recommendations</h2>\r\n+          <h2>{t(\"Recommendations\")}</h2>\r\n           <CardList data={movies} isRecommendation={true} />\r\n         </div>\r\n       ) : (\r\n         <p className=\"text-center\">No recommendations found</p>\r\n"
                },
                {
                    "date": 1757805713761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,14 +4,16 @@\n import NavBar from \"../Components/NavBar\";\r\n import CardDetails from \"../Components/CardDetails\";\r\n import CardList from \"../Components/Card\";\r\n import { MainContext } from \"../useContext\";\r\n+import { useTranslation } from \"react-i18next\";\r\n \r\n function DetailsPage() {\r\n   const { id } = useParams();\r\n   const { selectedType } = useContext(MainContext);\r\n   const [loading, setLoading] = useState(true);\r\n   const [movies, setMovies] = useState([]);\r\n+  const { t } = useTranslation();\r\n \r\n   useEffect(() => {\r\n     setLoading(true);\r\n     fetch(\r\n"
                },
                {
                    "date": 1757805818541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n           <Spinner animation=\"border\" variant=\"warning\" />\r\n         </div>\r\n       ) : movies.length ? (\r\n         <div>\r\n-          <h2>{t(\"Recommendations\")}</h2>\r\n+          <h2 className=\"recommendText\">{t(\"Recommendations\")}</h2>\r\n           <CardList data={movies} isRecommendation={true} />\r\n         </div>\r\n       ) : (\r\n         <p className=\"text-center\">No recommendations found</p>\r\n"
                },
                {
                    "date": 1757846820543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n           <h2 className=\"recommendText\">{t(\"Recommendations\")}</h2>\r\n           <CardList data={movies} isRecommendation={true} />\r\n         </div>\r\n       ) : (\r\n-        <p className=\"text-center\">No recommendations found</p>\r\n+        <p className=\"text-center\">{t(\"No recommendations found\")}</p>\r\n       )}\r\n     </>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1757846949658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n           <Spinner animation=\"border\" variant=\"warning\" />\r\n         </div>\r\n       ) : movies.length ? (\r\n         <div>\r\n-          <h2 className=\"recommendText\">{t(\"Recommendations\")}</h2>\r\n+          <h1 className=\"recommendText\">{t(\"Recommendations\")}</h1>\r\n           <CardList data={movies} isRecommendation={true} />\r\n         </div>\r\n       ) : (\r\n         <p className=\"text-center\">{t(\"No recommendations found\")}</p>\r\n"
                }
            ],
            "date": 1757681087615,
            "name": "Commit-0",
            "content": "function DetailsPage() {\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\nexport default DetailsPage"
        }
    ]
}